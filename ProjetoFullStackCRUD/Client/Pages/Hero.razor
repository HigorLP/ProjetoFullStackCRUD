@page "/hero"
@page "/hero/{id:int}"

@inject ISuperHeroService SuperHeroService

@if (Id == null) {
    <PageTitle>Crie um novo Super Herói</PageTitle>
    <h3>Crie um novo Super Herói</h3>
} else {
    <PageTitle>Editar @hero.HeroName</PageTitle>
    <h3>Edite @hero.HeroName </h3>
}
<EditForm Model="hero" OnSubmit="HandleSubmit">
    <div>
        <label for="firstname">First Name</label>
        <InputText id="firstname" @bind-Value="hero.FirstName" class="form-control"></InputText>
    </div>
    <div>
        <label for="lastname">Last name</label>
        <InputText id="lastname" @bind-Value="hero.LastName" class="form-control"></InputText>
    </div>
    <div>
        <label for="heroname">Hero Name</label>
        <InputText id="heroname" @bind-Value="hero.HeroName" class="form-control"></InputText>
    </div>
    <div>
        <label for="comic">Comic</label>
        <InputSelect @bind-Value="hero.ComicId" class="form-select">
            @foreach (var comic in SuperHeroService.Comics) {
                <option value="@comic.Id">@comic.Name</option>
            }
        </InputSelect>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }
    SuperHero hero = new SuperHero { Comic = new Comic() };

    string btnText = string.Empty;

    protected override async Task OnInitializedAsync() {
        btnText = (Id == null) ? "Save New Hero" : "Update Hero";
        await SuperHeroService.GetComics();
    }

    protected override async Task OnParametersSetAsync() {
        if (Id == null) {
            //Create a new Hero
        } else {
            hero = await SuperHeroService.GetSingleHero((int)Id);
        }
    }
    async Task HandleSubmit() {

    }
}
